{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Desktop\\\\ParkinsonAid\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const chartRef1 = useRef(null);\n  const chartRef2 = useRef(null);\n  useEffect(() => {\n    // Render the first chart\n    const chart1 = new Chart(chartRef1.current, {\n      type: 'bar',\n      // or whatever type of chart you're using\n      data: {\n        labels: ['January', 'February', 'March'],\n        datasets: [{\n          label: 'Dataset 1',\n          data: [65, 59, 80],\n          backgroundColor: 'rgba(75,192,192,0.4)',\n          borderColor: 'rgba(75,192,192,1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'category'\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n\n    // Render the second chart\n    const chart2 = new Chart(chartRef2.current, {\n      type: 'line',\n      // or whatever type of chart you're using\n      data: {\n        labels: ['April', 'May', 'June'],\n        datasets: [{\n          label: 'Dataset 2',\n          data: [28, 48, 40],\n          backgroundColor: 'rgba(153,102,255,0.2)',\n          borderColor: 'rgba(153,102,255,1)',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        scales: {\n          x: {\n            type: 'category'\n          },\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n    return () => {\n      chart1.destroy();\n      chart2.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      gap: '20px'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '45%',\n        height: '300px'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '45%',\n        height: '300px'\n      },\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"k0hTI8W0u0Klz55p9lJLE7xOpng=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Dashboard","_s","chartRef1","chartRef2","chart1","current","type","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","scales","x","y","beginAtZero","chart2","destroy","style","display","gap","children","width","height","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Zbook/Desktop/ParkinsonAid/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart } from 'chart.js';\r\n\r\nconst Dashboard = () => {\r\n  const chartRef1 = useRef(null);\r\n  const chartRef2 = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Render the first chart\r\n    const chart1 = new Chart(chartRef1.current, {\r\n      type: 'bar', // or whatever type of chart you're using\r\n      data: {\r\n        labels: ['January', 'February', 'March'],\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 1',\r\n            data: [65, 59, 80],\r\n            backgroundColor: 'rgba(75,192,192,0.4)',\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: { type: 'category' },\r\n          y: { beginAtZero: true },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Render the second chart\r\n    const chart2 = new Chart(chartRef2.current, {\r\n      type: 'line', // or whatever type of chart you're using\r\n      data: {\r\n        labels: ['April', 'May', 'June'],\r\n        datasets: [\r\n          {\r\n            label: 'Dataset 2',\r\n            data: [28, 48, 40],\r\n            backgroundColor: 'rgba(153,102,255,0.2)',\r\n            borderColor: 'rgba(153,102,255,1)',\r\n            borderWidth: 1,\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        scales: {\r\n          x: { type: 'category' },\r\n          y: { beginAtZero: true },\r\n        },\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      chart1.destroy();\r\n      chart2.destroy();\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ display: 'flex', gap: '20px' }}> {/* Flexbox to display side by side */}\r\n      <div style={{ width: '45%', height: '300px' }}> {/* Adjust width and height */}\r\n        <canvas ref={chartRef1}></canvas>\r\n      </div>\r\n      <div style={{ width: '45%', height: '300px' }}> {/* Adjust width and height */}\r\n        <canvas ref={chartRef2}></canvas>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,SAASC,KAAK,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,SAAS,GAAGN,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMO,SAAS,GAAGP,MAAM,CAAC,IAAI,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,MAAM,GAAG,IAAIP,KAAK,CAACK,SAAS,CAACG,OAAO,EAAE;MAC1CC,IAAI,EAAE,KAAK;MAAE;MACbC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,CAAC;QACxCC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,WAAW;UAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAClBI,eAAe,EAAE,sBAAsB;UACvCC,WAAW,EAAE,oBAAoB;UACjCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YAAEZ,IAAI,EAAE;UAAW,CAAC;UACvBa,CAAC,EAAE;YAAEC,WAAW,EAAE;UAAK;QACzB;MACF;IACF,CAAC,CAAC;;IAEF;IACA,MAAMC,MAAM,GAAG,IAAIxB,KAAK,CAACM,SAAS,CAACE,OAAO,EAAE;MAC1CC,IAAI,EAAE,MAAM;MAAE;MACdC,IAAI,EAAE;QACJC,MAAM,EAAE,CAAC,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC;QAChCC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,WAAW;UAClBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;UAClBI,eAAe,EAAE,uBAAuB;UACxCC,WAAW,EAAE,qBAAqB;UAClCC,WAAW,EAAE;QACf,CAAC;MAEL,CAAC;MACDC,OAAO,EAAE;QACPC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE,KAAK;QAC1BC,MAAM,EAAE;UACNC,CAAC,EAAE;YAAEZ,IAAI,EAAE;UAAW,CAAC;UACvBa,CAAC,EAAE;YAAEC,WAAW,EAAE;UAAK;QACzB;MACF;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXhB,MAAM,CAACkB,OAAO,CAAC,CAAC;MAChBD,MAAM,CAACC,OAAO,CAAC,CAAC;IAClB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEvB,OAAA;IAAKwB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAO,CAAE;IAAAC,QAAA,GAAC,GAAC,eAC7C3B,OAAA;MAAKwB,KAAK,EAAE;QAAEI,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAF,QAAA,GAAC,GAAC,eAC9C3B,OAAA;QAAQ8B,GAAG,EAAE3B;MAAU;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,eACNlC,OAAA;MAAKwB,KAAK,EAAE;QAAEI,KAAK,EAAE,KAAK;QAAEC,MAAM,EAAE;MAAQ,CAAE;MAAAF,QAAA,GAAC,GAAC,eAC9C3B,OAAA;QAAQ8B,GAAG,EAAE1B;MAAU;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChC,EAAA,CAvEID,SAAS;AAAAkC,EAAA,GAATlC,SAAS;AAyEf,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}