{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Desktop\\\\ParkinsonAid\\\\frontend\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport './Upload.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [files, setFiles] = useState([]);\n  const onDrop = useCallback(acceptedFiles => {\n    setFiles([...files, ...acceptedFiles]);\n  }, [files]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Upload MRI Images for Parkinson's Prediction\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: \"dropzone\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drop the files here ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop MRI image or click to select files\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Uploading - \", files.length, \"/3 images\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), files.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: \"70\",\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this), \" \"]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-prediction-btn\",\n      children: \"Show Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_s(Upload, \"tNMq6o4oWzxfTA/M2osgRdnGvTQ=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useCallback","useState","useDropzone","jsxDEV","_jsxDEV","Upload","_s","files","setFiles","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","file","index","name","value","max","_c","$RefreshReg$"],"sources":["C:/Users/Zbook/Desktop/ParkinsonAid/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport './Upload.css';\r\n\r\nfunction Upload() {\r\n  const [files, setFiles] = useState([]);\r\n  \r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles([...files, ...acceptedFiles]);\r\n  }, [files]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div className=\"upload-page\">\r\n      <div className=\"header\">\r\n        <h2>Upload MRI Images for Parkinson's Prediction</h2>\r\n      </div>\r\n      \r\n      {/* Dropzone Section */}\r\n      <div {...getRootProps()} className=\"dropzone\">\r\n        <input {...getInputProps()} />\r\n        {\r\n          isDragActive ?\r\n          <p>Drop the files here ...</p> :\r\n          <p>Drag & drop MRI image or click to select files</p>\r\n        }\r\n      </div>\r\n\r\n      {/* Upload Progress Section */}\r\n      <div className=\"upload-progress\">\r\n        <h4>Uploading - {files.length}/3 images</h4>\r\n        {files.map((file, index) => (\r\n          <div className=\"upload-item\" key={index}>\r\n            <p>{file.name}</p>\r\n            <progress value=\"70\" max=\"100\"></progress> {/* Mock progress */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Show Prediction Button */}\r\n      <button className=\"show-prediction-btn\">\r\n        Show Prediction\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Upload;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMQ,MAAM,GAAGT,WAAW,CAACU,aAAa,IAAI;IAC1CF,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGG,aAAa,CAAC,CAAC;EACxC,CAAC,EAAE,CAACH,KAAK,CAAC,CAAC;EAEX,MAAM;IAAEI,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGX,WAAW,CAAC;IAAEO;EAAO,CAAC,CAAC;EAE7E,oBACEL,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BX,OAAA;MAAKU,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACrBX,OAAA;QAAAW,QAAA,EAAI;MAA4C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC,eAGNf,OAAA;MAAA,GAASO,YAAY,CAAC,CAAC;MAAEG,SAAS,EAAC,UAAU;MAAAC,QAAA,gBAC3CX,OAAA;QAAA,GAAWQ,aAAa,CAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,EAE5BN,YAAY,gBACZT,OAAA;QAAAW,QAAA,EAAG;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAC9Bf,OAAA;QAAAW,QAAA,EAAG;MAA8C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEpD,CAAC,eAGNf,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BX,OAAA;QAAAW,QAAA,GAAI,cAAY,EAACR,KAAK,CAACa,MAAM,EAAC,WAAS;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC3CZ,KAAK,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBnB,OAAA;QAAKU,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BX,OAAA;UAAAW,QAAA,EAAIO,IAAI,CAACE;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClBf,OAAA;UAAUqB,KAAK,EAAC,IAAI;UAACC,GAAG,EAAC;QAAK;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW,CAAC,KAAC;MAAA,GAFXI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGlC,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNf,OAAA;MAAQU,SAAS,EAAC,qBAAqB;MAAAC,QAAA,EAAC;IAExC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACb,EAAA,CA1CQD,MAAM;EAAA,QAOyCH,WAAW;AAAA;AAAAyB,EAAA,GAP1DtB,MAAM;AA4Cf,eAAeA,MAAM;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}