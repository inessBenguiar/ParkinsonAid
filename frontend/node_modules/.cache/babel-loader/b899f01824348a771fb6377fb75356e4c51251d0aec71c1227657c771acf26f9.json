{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Desktop\\\\ParkinsonAid\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport Nav from \"../components/Nav\";\nimport './Dashboard.css';\nimport { Bar } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [isConnected, setIsConnected] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const userProfile = {\n    name: 'John Doe',\n    image: 'https://via.placeholder.com/40'\n  };\n  const handleLogout = () => {\n    setIsConnected(false);\n  };\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Mock data for both charts\n  const mockPatientData = useMemo(() => [{\n    date: '2024-09-01',\n    male: 50,\n    female: 30\n  }, {\n    date: '2024-09-02',\n    male: 40,\n    female: 60\n  }, {\n    date: '2024-09-03',\n    male: 30,\n    female: 50\n  }, {\n    date: '2024-09-04',\n    male: 60,\n    female: 40\n  }], []);\n  const mockDiagnosisData = useMemo(() => [{\n    date: '2024-09-01',\n    positive: 10,\n    negative: 5\n  }, {\n    date: '2024-09-02',\n    positive: 8,\n    negative: 3\n  }, {\n    date: '2024-09-03',\n    positive: 12,\n    negative: 6\n  }, {\n    date: '2024-09-04',\n    positive: 15,\n    negative: 5\n  }], []);\n\n  // Memoized chart data to avoid re-creating it on every render\n  const genderChartData = useMemo(() => {\n    return mockPatientData.map(data => ({\n      date: data.date,\n      data: {\n        labels: ['Male', 'Female'],\n        datasets: [{\n          label: 'Count',\n          data: [data.male, data.female],\n          backgroundColor: ['#42A5F5', '#66BB6A'] // Blue for male, green for female\n        }]\n      }\n    }));\n  }, [mockPatientData]);\n  const diagnosisChartData = useMemo(() => {\n    return mockDiagnosisData.map(data => ({\n      date: data.date,\n      data: {\n        labels: ['Parkinson Detected', 'Parkinson Not Detected'],\n        datasets: [{\n          label: 'Count',\n          data: [data.positive, data.negative],\n          backgroundColor: ['#42A5F5', '#66BB6A'] // Blue for detected, green for not detected\n        }]\n      }\n    }));\n  }, [mockDiagnosisData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      userProfile: isConnected ? userProfile : null,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, Dr \", userProfile.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for patients...\",\n          value: searchQuery,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), genderChartData.map((chart, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: chart.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: chart.data,\n              options: {\n                responsive: true,\n                maintainAspectRatio: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, `gender-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Diagnoses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), diagnosisChartData.map((chart, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: chart.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: chart.data,\n              options: {\n                responsive: true,\n                maintainAspectRatio: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, `diagnosis-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"View Diagnosis History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"New Diagnosis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"T3kwaBbVNj4shR1AUB1b00r9SY0=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useMemo","Nav","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","isConnected","setIsConnected","searchQuery","setSearchQuery","userProfile","name","image","handleLogout","handleSearch","event","target","value","mockPatientData","date","male","female","mockDiagnosisData","positive","negative","genderChartData","map","data","labels","datasets","label","backgroundColor","diagnosisChartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","chart","index","options","responsive","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/Zbook/Desktop/ParkinsonAid/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\r\nimport Nav from \"../components/Nav\";\r\nimport './Dashboard.css';\r\nimport { Bar } from 'react-chartjs-2'; \r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction Dashboard() {\r\n    const [isConnected, setIsConnected] = useState(true);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const userProfile = {\r\n        name: 'John Doe',\r\n        image: 'https://via.placeholder.com/40',\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setIsConnected(false);\r\n    };\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    // Mock data for both charts\r\n    const mockPatientData = useMemo(() => [\r\n        { date: '2024-09-01', male: 50, female: 30 },\r\n        { date: '2024-09-02', male: 40, female: 60 },\r\n        { date: '2024-09-03', male: 30, female: 50 },\r\n        { date: '2024-09-04', male: 60, female: 40 }\r\n    ], []);\r\n\r\n    const mockDiagnosisData = useMemo(() => [\r\n        { date: '2024-09-01', positive: 10, negative: 5 },\r\n        { date: '2024-09-02', positive: 8, negative: 3 },\r\n        { date: '2024-09-03', positive: 12, negative: 6 },\r\n        { date: '2024-09-04', positive: 15, negative: 5 }\r\n    ], []);\r\n\r\n    // Memoized chart data to avoid re-creating it on every render\r\n    const genderChartData = useMemo(() => {\r\n        return mockPatientData.map(data => ({\r\n            date: data.date,\r\n            data: {\r\n                labels: ['Male', 'Female'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Count',\r\n                        data: [data.male, data.female],\r\n                        backgroundColor: ['#42A5F5', '#66BB6A'], // Blue for male, green for female\r\n                    }\r\n                ]\r\n            }\r\n        }));\r\n    }, [mockPatientData]);\r\n\r\n    const diagnosisChartData = useMemo(() => {\r\n        return mockDiagnosisData.map(data => ({\r\n            date: data.date,\r\n            data: {\r\n                labels: ['Parkinson Detected', 'Parkinson Not Detected'],\r\n                datasets: [\r\n                    {\r\n                        label: 'Count',\r\n                        data: [data.positive, data.negative],\r\n                        backgroundColor: ['#42A5F5', '#66BB6A'], // Blue for detected, green for not detected\r\n                    }\r\n                ]\r\n            }\r\n        }));\r\n    }, [mockDiagnosisData]);\r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <Nav userProfile={isConnected ? userProfile : null} handleLogout={handleLogout} />\r\n\r\n            <div className=\"dashboard-content\">\r\n                <h1>Welcome, Dr {userProfile.name}!</h1>\r\n\r\n                <div className=\"search-bar\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Search for patients...\" \r\n                        value={searchQuery} \r\n                        onChange={handleSearch} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"dashboard-section\">\r\n                    <div className=\"chart-container\">\r\n                        <h2>Recent Patients</h2>\r\n                        {genderChartData.map((chart, index) => (\r\n                            <div key={`gender-${index}`}>\r\n                                <p>{chart.date}</p>\r\n                                <Bar\r\n                                    data={chart.data}\r\n                                    options={{ responsive: true, maintainAspectRatio: false }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"chart-container\">\r\n                        <h2>Recent Diagnoses</h2>\r\n                        {diagnosisChartData.map((chart, index) => (\r\n                            <div key={`diagnosis-${index}`}>\r\n                                <p>{chart.date}</p>\r\n                                <Bar\r\n                                    data={chart.data}\r\n                                    options={{ responsive: true, maintainAspectRatio: false }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-buttons\">\r\n                    <button className=\"dashboard-button\">View Diagnosis History</button>\r\n                    <button className=\"dashboard-button\">New Diagnosis</button>\r\n                    <button className=\"dashboard-button\">Update Profile</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,OAAO,QAAQ,OAAO;AAChD,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAO,iBAAiB;AACxB,SAASC,GAAG,QAAQ,iBAAiB;AACrC,SAASC,KAAK,IAAIC,OAAO,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5GR,OAAO,CAACS,QAAQ,CAACR,aAAa,EAAEC,WAAW,EAAEC,UAAU,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,CAAC;AAEhF,SAASI,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMqB,WAAW,GAAG;IAChBC,IAAI,EAAE,UAAU;IAChBC,KAAK,EAAE;EACX,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACvBN,cAAc,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMO,YAAY,GAAIC,KAAK,IAAK;IAC5BN,cAAc,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,eAAe,GAAG5B,OAAO,CAAC,MAAM,CAClC;IAAE6B,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC5C;IAAEF,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC5C;IAAEF,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,EAC5C;IAAEF,IAAI,EAAE,YAAY;IAAEC,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAC/C,EAAE,EAAE,CAAC;EAEN,MAAMC,iBAAiB,GAAGhC,OAAO,CAAC,MAAM,CACpC;IAAE6B,IAAI,EAAE,YAAY;IAAEI,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACjD;IAAEL,IAAI,EAAE,YAAY;IAAEI,QAAQ,EAAE,CAAC;IAAEC,QAAQ,EAAE;EAAE,CAAC,EAChD;IAAEL,IAAI,EAAE,YAAY;IAAEI,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,EACjD;IAAEL,IAAI,EAAE,YAAY;IAAEI,QAAQ,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAE,CAAC,CACpD,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAGnC,OAAO,CAAC,MAAM;IAClC,OAAO4B,eAAe,CAACQ,GAAG,CAACC,IAAI,KAAK;MAChCR,IAAI,EAAEQ,IAAI,CAACR,IAAI;MACfQ,IAAI,EAAE;QACFC,MAAM,EAAE,CAAC,MAAM,EAAE,QAAQ,CAAC;QAC1BC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,OAAO;UACdH,IAAI,EAAE,CAACA,IAAI,CAACP,IAAI,EAAEO,IAAI,CAACN,MAAM,CAAC;UAC9BU,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAE;QAC7C,CAAC;MAET;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACb,eAAe,CAAC,CAAC;EAErB,MAAMc,kBAAkB,GAAG1C,OAAO,CAAC,MAAM;IACrC,OAAOgC,iBAAiB,CAACI,GAAG,CAACC,IAAI,KAAK;MAClCR,IAAI,EAAEQ,IAAI,CAACR,IAAI;MACfQ,IAAI,EAAE;QACFC,MAAM,EAAE,CAAC,oBAAoB,EAAE,wBAAwB,CAAC;QACxDC,QAAQ,EAAE,CACN;UACIC,KAAK,EAAE,OAAO;UACdH,IAAI,EAAE,CAACA,IAAI,CAACJ,QAAQ,EAAEI,IAAI,CAACH,QAAQ,CAAC;UACpCO,eAAe,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAE;QAC7C,CAAC;MAET;IACJ,CAAC,CAAC,CAAC;EACP,CAAC,EAAE,CAACT,iBAAiB,CAAC,CAAC;EAEvB,oBACIpB,OAAA;IAAK+B,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BhC,OAAA,CAACX,GAAG;MAACmB,WAAW,EAAEJ,WAAW,GAAGI,WAAW,GAAG,IAAK;MAACG,YAAY,EAAEA;IAAa;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAElFpC,OAAA;MAAK+B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BhC,OAAA;QAAAgC,QAAA,GAAI,cAAY,EAACxB,WAAW,CAACC,IAAI,EAAC,GAAC;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAExCpC,OAAA;QAAK+B,SAAS,EAAC,YAAY;QAAAC,QAAA,eACvBhC,OAAA;UACIqC,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,wBAAwB;UACpCvB,KAAK,EAAET,WAAY;UACnBiC,QAAQ,EAAE3B;QAAa;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CAAC,eAENpC,OAAA;QAAK+B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BhC,OAAA;UAAK+B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BhC,OAAA;YAAAgC,QAAA,EAAI;UAAe;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACvBb,eAAe,CAACC,GAAG,CAAC,CAACgB,KAAK,EAAEC,KAAK,kBAC9BzC,OAAA;YAAAgC,QAAA,gBACIhC,OAAA;cAAAgC,QAAA,EAAIQ,KAAK,CAACvB;YAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBpC,OAAA,CAACV,GAAG;cACAmC,IAAI,EAAEe,KAAK,CAACf,IAAK;cACjBiB,OAAO,EAAE;gBAAEC,UAAU,EAAE,IAAI;gBAAEC,mBAAmB,EAAE;cAAM;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA,GALI,UAAUK,KAAK,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMtB,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAENpC,OAAA;UAAK+B,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC5BhC,OAAA;YAAAgC,QAAA,EAAI;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACxBN,kBAAkB,CAACN,GAAG,CAAC,CAACgB,KAAK,EAAEC,KAAK,kBACjCzC,OAAA;YAAAgC,QAAA,gBACIhC,OAAA;cAAAgC,QAAA,EAAIQ,KAAK,CAACvB;YAAI;cAAAgB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnBpC,OAAA,CAACV,GAAG;cACAmC,IAAI,EAAEe,KAAK,CAACf,IAAK;cACjBiB,OAAO,EAAE;gBAAEC,UAAU,EAAE,IAAI;gBAAEC,mBAAmB,EAAE;cAAM;YAAE;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7D,CAAC;UAAA,GALI,aAAaK,KAAK,EAAE;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMzB,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eAENpC,OAAA;QAAK+B,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC9BhC,OAAA;UAAQ+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpEpC,OAAA;UAAQ+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC3DpC,OAAA;UAAQ+B,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAc;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACjC,EAAA,CArHQD,SAAS;AAAA2C,EAAA,GAAT3C,SAAS;AAuHlB,eAAeA,SAAS;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}