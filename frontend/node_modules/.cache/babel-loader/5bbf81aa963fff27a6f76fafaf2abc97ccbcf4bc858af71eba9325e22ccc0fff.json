{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Desktop\\\\ParkinsonAid\\\\frontend\\\\src\\\\pages\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Nav from \"../components/Nav\";\nimport './Dashboard.css';\nimport { Bar } from 'react-chartjs-2'; // Import Bar chart from react-chartjs-2\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register required components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [isConnected, setIsConnected] = useState(true);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const userProfile = {\n    name: 'John Doe',\n    image: 'https://via.placeholder.com/40'\n  };\n  const handleLogout = () => {\n    setIsConnected(false);\n  };\n  const handleSearch = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Mock data for both charts\n  const mockPatientData = [{\n    date: '2024-09-01',\n    male: 50,\n    female: 30\n  }, {\n    date: '2024-09-02',\n    male: 40,\n    female: 60\n  }, {\n    date: '2024-09-03',\n    male: 30,\n    female: 50\n  }, {\n    date: '2024-09-04',\n    male: 60,\n    female: 40\n  }];\n  const mockDiagnosisData = [{\n    date: '2024-09-01',\n    positive: 10,\n    negative: 5\n  }, {\n    date: '2024-09-02',\n    positive: 8,\n    negative: 3\n  }, {\n    date: '2024-09-03',\n    positive: 12,\n    negative: 6\n  }, {\n    date: '2024-09-04',\n    positive: 15,\n    negative: 5\n  }];\n  const generateGenderChartData = (male, female) => {\n    return {\n      labels: ['Male', 'Female'],\n      datasets: [{\n        label: 'Count',\n        data: [male, female],\n        backgroundColor: ['#42A5F5', '#66BB6A'] // Blue for male, green for female\n      }]\n    };\n  };\n  const generateDiagnosisChartData = (positive, negative) => {\n    return {\n      labels: ['Parkinson Detected', 'Parkinson Not Detected'],\n      datasets: [{\n        label: 'Count',\n        data: [positive, negative],\n        backgroundColor: ['#42A5F5', '#66BB6A'] // Blue for detected, green for not detected\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-page\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      userProfile: isConnected ? userProfile : null,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Welcome, Dr \", userProfile.name, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-bar\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Search for patients...\",\n          value: searchQuery,\n          onChange: handleSearch\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Patients\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), mockPatientData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: generateGenderChartData(data.male, data.female),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this)]\n          }, data.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Recent Diagnoses\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), mockDiagnosisData.map(data => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: data.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Bar, {\n              data: generateDiagnosisChartData(data.positive, data.negative),\n              options: {\n                responsive: true,\n                maintainAspectRatio: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)]\n          }, data.date, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"View Diagnosis History\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"New Diagnosis\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"dashboard-button\",\n          children: \"Update Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(Dashboard, \"UOeImR7B4PG1y+snYqJfAR7Qb9k=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","Nav","Bar","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","Dashboard","_s","isConnected","setIsConnected","searchQuery","setSearchQuery","userProfile","name","image","handleLogout","handleSearch","event","target","value","mockPatientData","date","male","female","mockDiagnosisData","positive","negative","generateGenderChartData","labels","datasets","label","data","backgroundColor","generateDiagnosisChartData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","options","responsive","maintainAspectRatio","_c","$RefreshReg$"],"sources":["C:/Users/Zbook/Desktop/ParkinsonAid/frontend/src/pages/Dashboard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Nav from \"../components/Nav\";\r\nimport './Dashboard.css';\r\nimport { Bar } from 'react-chartjs-2'; // Import Bar chart from react-chartjs-2\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\r\n\r\n// Register required components\r\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\r\n\r\nfunction Dashboard() {\r\n    const [isConnected, setIsConnected] = useState(true);\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n\r\n    const userProfile = {\r\n        name: 'John Doe',\r\n        image: 'https://via.placeholder.com/40',\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setIsConnected(false);\r\n    };\r\n\r\n    const handleSearch = (event) => {\r\n        setSearchQuery(event.target.value);\r\n    };\r\n\r\n    // Mock data for both charts\r\n    const mockPatientData = [\r\n        { date: '2024-09-01', male: 50, female: 30 },\r\n        { date: '2024-09-02', male: 40, female: 60 },\r\n        { date: '2024-09-03', male: 30, female: 50 },\r\n        { date: '2024-09-04', male: 60, female: 40 }\r\n    ];\r\n\r\n    const mockDiagnosisData = [\r\n        { date: '2024-09-01', positive: 10, negative: 5 },\r\n        { date: '2024-09-02', positive: 8, negative: 3 },\r\n        { date: '2024-09-03', positive: 12, negative: 6 },\r\n        { date: '2024-09-04', positive: 15, negative: 5 }\r\n    ];\r\n\r\n    const generateGenderChartData = (male, female) => {\r\n        return {\r\n            labels: ['Male', 'Female'],\r\n            datasets: [\r\n                {\r\n                    label: 'Count',\r\n                    data: [male, female],\r\n                    backgroundColor: ['#42A5F5', '#66BB6A'], // Blue for male, green for female\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    const generateDiagnosisChartData = (positive, negative) => {\r\n        return {\r\n            labels: ['Parkinson Detected', 'Parkinson Not Detected'],\r\n            datasets: [\r\n                {\r\n                    label: 'Count',\r\n                    data: [positive, negative],\r\n                    backgroundColor: ['#42A5F5', '#66BB6A'], // Blue for detected, green for not detected\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"dashboard-page\">\r\n            <Nav userProfile={isConnected ? userProfile : null} handleLogout={handleLogout} />\r\n\r\n            <div className=\"dashboard-content\">\r\n                <h1>Welcome, Dr {userProfile.name}!</h1>\r\n\r\n                <div className=\"search-bar\">\r\n                    <input \r\n                        type=\"text\" \r\n                        placeholder=\"Search for patients...\" \r\n                        value={searchQuery} \r\n                        onChange={handleSearch} \r\n                    />\r\n                </div>\r\n\r\n                <div className=\"dashboard-section\">\r\n                    <div className=\"chart-container\">\r\n                        <h2>Recent Patients</h2>\r\n                        {mockPatientData.map((data) => (\r\n                            <div key={data.date}>\r\n                                <p>{data.date}</p>\r\n                                <Bar\r\n                                    data={generateGenderChartData(data.male, data.female)}\r\n                                    options={{ responsive: true, maintainAspectRatio: false }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n\r\n                    <div className=\"chart-container\">\r\n                        <h2>Recent Diagnoses</h2>\r\n                        {mockDiagnosisData.map((data) => (\r\n                            <div key={data.date}>\r\n                                <p>{data.date}</p>\r\n                                <Bar\r\n                                    data={generateDiagnosisChartData(data.positive, data.negative)}\r\n                                    options={{ responsive: true, maintainAspectRatio: false }}\r\n                                />\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"dashboard-buttons\">\r\n                    <button className=\"dashboard-button\">View Diagnosis History</button>\r\n                    <button className=\"dashboard-button\">New Diagnosis</button>\r\n                    <button className=\"dashboard-button\">Update Profile</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}