{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Desktop\\\\ParkinsonAid\\\\frontend\\\\src\\\\pages\\\\Upload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Nav from '../components/Nav';\nimport { useDropzone } from 'react-dropzone';\nimport \"./Upload.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Upload() {\n  _s();\n  const [isConnected, setIsConnected] = useState(true);\n  const [uploadedFiles, setUploadedFiles] = useState([]);\n  const userProfile = {\n    name: 'John Doe',\n    image: 'https://via.placeholder.com/40'\n  };\n  const handleLogout = () => {\n    setIsConnected(false);\n  };\n\n  // Handle file drop\n  const onDrop = acceptedFiles => {\n    const newFiles = acceptedFiles.map(file => ({\n      name: file.name,\n      status: 'uploading',\n      // initial status\n      preview: URL.createObjectURL(file)\n    }));\n\n    // Simulate file upload and update status\n    setUploadedFiles(prevFiles => [...prevFiles, ...newFiles]);\n    setTimeout(() => {\n      const updatedFiles = newFiles.map(file => ({\n        ...file,\n        status: Math.random() > 0.2 ? 'uploaded' : 'failed' // Simulate random success/failure\n      }));\n      setUploadedFiles(prevFiles => prevFiles.map(file => {\n        const updatedFile = updatedFiles.find(f => f.name === file.name);\n        return updatedFile || file;\n      }));\n    }, 2000); // Simulate 2 second upload\n  };\n\n  // Handle file deletion\n  const handleDelete = fileName => {\n    setUploadedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName));\n  };\n  const {\n    getRootProps,\n    getInputProps\n  } = useDropzone({\n    onDrop,\n    accept: 'image/jpeg, image/png'\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"upload-page\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      userProfile: isConnected ? userProfile : null,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"upload-title\",\n      children: \"Upload MRI Images for Parkinson's Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropzone\",\n      ...getRootProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Drag & drop IRM image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Supported formats: JPEG, PNG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-progress\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Uploading - \", uploadedFiles.length, \" images attempted (Uploaded: \", uploadedFiles.filter(file => file.status === 'uploaded').length, \", Failed: \", uploadedFiles.filter(file => file.status === 'failed').length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }, this), uploadedFiles.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `upload-item ${file.status}`,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 23\n        }, this), file.status === 'uploading' && /*#__PURE__*/_jsxDEV(\"progress\", {\n          value: \"50\",\n          max: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 55\n        }, this), file.status === 'uploaded' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status uploaded\",\n          children: \"Uploaded\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 54\n        }, this), file.status === 'failed' && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"status failed\",\n          children: \"Failed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 52\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(file.name),\n          className: \"delete-btn\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 23\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 19\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"show-prediction-btn\",\n      children: \"Show Prediction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 7\n  }, this);\n}\n_s(Upload, \"gLfusG2aLWLPfHcTT71GWxfCO50=\", false, function () {\n  return [useDropzone];\n});\n_c = Upload;\nexport default Upload;\nvar _c;\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"names":["React","useState","Nav","useDropzone","jsxDEV","_jsxDEV","Upload","_s","isConnected","setIsConnected","uploadedFiles","setUploadedFiles","userProfile","name","image","handleLogout","onDrop","acceptedFiles","newFiles","map","file","status","preview","URL","createObjectURL","prevFiles","setTimeout","updatedFiles","Math","random","updatedFile","find","f","handleDelete","fileName","filter","getRootProps","getInputProps","accept","className","children","_jsxFileName","lineNumber","columnNumber","length","index","value","max","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Zbook/Desktop/ParkinsonAid/frontend/src/pages/Upload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Nav from '../components/Nav';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport \"./Upload.css\";\r\n\r\nfunction Upload() {\r\n    const [isConnected, setIsConnected] = useState(true);\r\n    const [uploadedFiles, setUploadedFiles] = useState([]);\r\n    \r\n    const userProfile = {\r\n      name: 'John Doe',\r\n      image: 'https://via.placeholder.com/40',\r\n    };\r\n\r\n    const handleLogout = () => {\r\n      setIsConnected(false);\r\n    };\r\n\r\n    // Handle file drop\r\n    const onDrop = (acceptedFiles) => {\r\n        const newFiles = acceptedFiles.map(file => ({\r\n            name: file.name,\r\n            status: 'uploading', // initial status\r\n            preview: URL.createObjectURL(file),\r\n        }));\r\n\r\n        // Simulate file upload and update status\r\n        setUploadedFiles(prevFiles => [...prevFiles, ...newFiles]);\r\n        setTimeout(() => {\r\n            const updatedFiles = newFiles.map(file => ({\r\n                ...file,\r\n                status: Math.random() > 0.2 ? 'uploaded' : 'failed', // Simulate random success/failure\r\n            }));\r\n            setUploadedFiles(prevFiles => prevFiles.map(file => {\r\n                const updatedFile = updatedFiles.find(f => f.name === file.name);\r\n                return updatedFile || file;\r\n            }));\r\n        }, 2000); // Simulate 2 second upload\r\n    };\r\n\r\n    // Handle file deletion\r\n    const handleDelete = (fileName) => {\r\n        setUploadedFiles(prevFiles => prevFiles.filter(file => file.name !== fileName));\r\n    };\r\n\r\n    const { getRootProps, getInputProps } = useDropzone({ onDrop, accept: 'image/jpeg, image/png' });\r\n\r\n    return (\r\n      <div className=\"upload-page\">\r\n          <Nav userProfile={isConnected ? userProfile : null} handleLogout={handleLogout} />\r\n\r\n          <h2 className=\"upload-title\">Upload MRI Images for Parkinson's Prediction</h2>\r\n  \r\n          {/* Drag & Drop Zone */}\r\n          <div className=\"dropzone\" {...getRootProps()}>\r\n              <input {...getInputProps()} />\r\n              <p>Drag & drop IRM image</p>\r\n              <p>Supported formats: JPEG, PNG</p>\r\n          </div>\r\n  \r\n          {/* Calculate the total number of attempted uploads */}\r\n          <div className=\"upload-progress\">\r\n              <h3>\r\n                  Uploading - {uploadedFiles.length} images attempted\r\n                  (Uploaded: {uploadedFiles.filter(file => file.status === 'uploaded').length}, \r\n                  Failed: {uploadedFiles.filter(file => file.status === 'failed').length})\r\n              </h3>\r\n  \r\n              {uploadedFiles.map((file, index) => (\r\n                  <div key={index} className={`upload-item ${file.status}`}>\r\n                      <p>{file.name}</p>\r\n                      {file.status === 'uploading' && <progress value=\"50\" max=\"100\" />}\r\n                      {file.status === 'uploaded' && <span className=\"status uploaded\">Uploaded</span>}\r\n                      {file.status === 'failed' && <span className=\"status failed\">Failed</span>}\r\n                      <button onClick={() => handleDelete(file.name)} className=\"delete-btn\">Delete</button>\r\n                  </div>\r\n              ))}\r\n          </div>\r\n  \r\n          {/* Show Prediction Button */}\r\n          <button className=\"show-prediction-btn\">Show Prediction</button>\r\n      </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default Upload;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}